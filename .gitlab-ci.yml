stages:
  - test
  - build
  - deploy

# Cache dependencies to speed up builds
cache:
  key: npm-cache
  paths:
    - node_modules/

variables:
  IDENTITY_SERVICE_URL: 134.122.17.21:9011
  FIXTURE_SERVICE_URL: 134.122.17.21:9003
  BETTING_SERVICE_URL: 134.122.17.21:9001
  WALLET_SERVICE_URL: 134.122.17.21:9013
  NOTIFICATION_SERVICE_URL: 134.122.17.21:9009
  BONUS_SERVICE_URL: 134.122.17.21:9006
  GAMING_SERVICE_URL: 134.122.17.21:9015
  GITHUB_TOKEN: $GITHUB_TOKEN # Store this in GitLab CI/CD Variables
  NEXT_VERSION: "1.0.0" # Update this dynamically or through semantic-release

# Test Stage
test:
  stage: test
  image: node:20

  before_script:
    - git config --global url."https://$GITHUB_TOKEN@github.com/".insteadOf "https://github.com/"
    - echo "Setting up environment variables for test phase..."
    # No need to install yarn globally, use the existing yarn in the image

  script:
    - echo "Running tests..."
    - yarn install --frozen-lockfile  # Install dependencies without modifying lockfile
    - yarn run test  # Run your test suite here
    - echo "Running Semantic Release..."
    - npx semantic-release  # Run Semantic Release to analyze commits and trigger a version bump if necessary

  only:
    - main

# Build Stage
build:
  stage: build
  image: docker:latest
  services:
    - docker:dind # Docker-in-Docker service to build Docker images

  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

  script:
    - echo "Building Docker image with the following service URLs:"
    - echo "IDENTITY_SERVICE_URL ...... $IDENTITY_SERVICE_URL"
    - echo "FIXTURE_SERVICE_URL  ...... $FIXTURE_SERVICE_URL"
    - echo "BETTING_SERVICE_URL ....... $BETTING_SERVICE_URL"
    - echo "WALLET_SERVICE_URL ........ $WALLET_SERVICE_URL"
    - echo "NOTIFICATION_SERVICE_URL ...... $NOTIFICATION_SERVICE_URL"
    - echo "BONUS_SERVICE_URL  ........ $BONUS_SERVICE_URL"
    - echo "GAMING_SERVICE_URL   ...... $GAMING_SERVICE_URL"
    - docker build -t $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$NEXT_VERSION .
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$NEXT_VERSION
    - echo "Finished building docker image"

  only:
    - dev

# Deploy Stage
deploy:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind

  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

  script:
    - echo "Deploying Docker container..."
    - docker pull $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$NEXT_VERSION
    - docker stop gatewayservice || true  # Stop any existing container
    - docker rm gatewayservice || true    # Remove the container if it exists
    - docker run -d --name gatewayservice -p 80:80 \
      -e IDENTITY_SERVICE_URL="$IDENTITY_SERVICE_URL" \
      -e FIXTURE_SERVICE_URL="$FIXTURE_SERVICE_URL" \
      -e BETTING_SERVICE_URL="$BETTING_SERVICE_URL" \
      -e WALLET_SERVICE_URL="$WALLET_SERVICE_URL" \
      -e NOTIFICATION_SERVICE_URL="$NOTIFICATION_SERVICE_URL" \
      -e BONUS_SERVICE_URL="$BONUS_SERVICE_URL" \
      -e GAMING_SERVICE_URL="$GAMING_SERVICE_URL" \
      $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$NEXT_VERSION

  only:
    - main
